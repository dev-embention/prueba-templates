name: Project automations done
on:
  issues:
    types:
      - opened
      - labeled
env:
  todo: Todo
  done: Done
  in_progress: In Progress
  ans: Answered
  not_ans: Not Answered
  organization: dev-embention
  project: 2
  REPO_TITLE: ${{ github.repository }}
  ISSUE_TITLE: "${{ github.event.issue.title }}"

jobs:
  issue_done:
    name: issue_done
    runs-on: ubuntu-latest
    steps:
      - name: Get issues labeled stale
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  items(last: 20) {
                    nodes {
                      id
                      content {
                        ... on Issue {
                          title
                          url
                          state
                          labels(first: 10) {
                            nodes {
                              name
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=${{ secrets.GH_TOKEN_MOVE_ISSUES }} -F number=${{ env.project }} > project_data.json
            
            echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
            echo 'DATE_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Date posted") | .id' project_data.json) >> $GITHUB_ENV
            echo 'STATUS_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .id' project_data.json) >> $GITHUB_ENV
            echo 'TODO_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="Todo") |.id' project_data.json) >> $GITHUB_ENV
      - name: Moved issue to ${{ env.done }}
        uses: leonsteinhaeuser/project-beta-automations@v2.2.1
        if: github.event.sender.type == 'Bot' && github.event.label.name == 'Stale'
        with:
          gh_token: ${{ secrets.GH_TOKEN_MOVE_ISSUES }}
          # user: sample-user
          organization: ${{ env.organization }}
          project_id: ${{ env.project }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.done }} # Target status
